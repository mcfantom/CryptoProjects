"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const nem_library_1 = require("nem-library");
const fs = require('fs');
nem_library_1.NEMLibrary.bootstrap(nem_library_1.NetworkTypes.TEST_NET);
const rutaWallet = 'C:\\_Curso\\CryptoProjects\\bin';
const nombreWalletFile = 'miWallet.wlt';
let fullFileWalletPath = `${rutaWallet}\\${nombreWalletFile}`;
console.log('Cargando el contenido del archivo (en crudo) de la wallet en una variable\n');
const tmpStrMiWallet = fs.readFileSync(`${fullFileWalletPath}`, 'utf8');
const miWallet = nem_library_1.SimpleWallet.readFromWLT(tmpStrMiWallet);
const myAddress = miWallet.address;
console.log('La address o direccion de la cuenta contenida en la wallet es:\n');
console.log(myAddress.pretty());
const myAccount = new nem_library_1.AccountHttp();
myAccount.getMosaicOwnedByAddress(myAddress).subscribe(mosaics => {
    const xemMosaic = mosaics.find((mosaic) => {
        return mosaic.mosaicId.name === 'xem';
    });
    if (!xemMosaic) {
        console.log('La cantidad XEM es: 0');
    }
    else {
        console.log(`La cantidad XEM es: ${xemMosaic.quantity / 1e6}`);
    }
    ;
    const doctaMosaic = mosaics.find((mosaic) => {
        return mosaic.mosaicId.name === 'doctatst';
    });
    if (!doctaMosaic) {
        console.log('La cantidad doctatst es: 0');
    }
    else {
        console.log(`La cantidad doctatst es: ${doctaMosaic.quantity / 1e6}`);
    }
    ;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2FsbGV0Q2hlY2tCYWxhbmNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsid2FsbGV0Q2hlY2tCYWxhbmNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNkNBQWtGO0FBV2xGLE1BQU0sRUFBRSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztBQUd6Qix3QkFBVSxDQUFDLFNBQVMsQ0FBQywwQkFBWSxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRzVDLE1BQU0sVUFBVSxHQUFHLGlDQUFpQyxDQUFDO0FBRXJELE1BQU0sZ0JBQWdCLEdBQUcsY0FBYyxDQUFDO0FBQ3hDLElBQUksa0JBQWtCLEdBQUcsR0FBRyxVQUFVLEtBQUssZ0JBQWdCLEVBQUUsQ0FBQztBQUc5RCxPQUFPLENBQUMsR0FBRyxDQUFDLDZFQUE2RSxDQUFDLENBQUM7QUFDM0YsTUFBTSxjQUFjLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxHQUFHLGtCQUFrQixFQUFFLEVBQUUsTUFBTSxDQUFDLENBQUM7QUFDeEUsTUFBTSxRQUFRLEdBQUcsMEJBQVksQ0FBQyxXQUFXLENBQUMsY0FBYyxDQUFDLENBQUM7QUFDMUQsTUFBTSxTQUFTLEdBQUcsUUFBUSxDQUFDLE9BQU8sQ0FBQztBQUNuQyxPQUFPLENBQUMsR0FBRyxDQUFDLGtFQUFrRSxDQUFDLENBQUM7QUFDaEYsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztBQUdoQyxNQUFNLFNBQVMsR0FBRyxJQUFJLHlCQUFXLEVBQUUsQ0FBQztBQUNwQyxTQUFTLENBQUMsdUJBQXVCLENBQUMsU0FBUyxDQUFDLENBQUMsU0FBUyxDQUFDLE9BQU8sQ0FBQyxFQUFFO0lBQy9ELE1BQU0sU0FBUyxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFNLEVBQUUsRUFBRTtRQUMxQyxPQUFPLE1BQU0sQ0FBQyxRQUFRLENBQUMsSUFBSSxLQUFLLEtBQUssQ0FBQztJQUN2QyxDQUFDLENBQUMsQ0FBQztJQUNILElBQUksQ0FBQyxTQUFTLEVBQUU7UUFDYixPQUFPLENBQUMsR0FBRyxDQUFDLHVCQUF1QixDQUFDLENBQUM7S0FDdEM7U0FBTTtRQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsdUJBQXVCLFNBQVMsQ0FBQyxRQUFRLEdBQUcsR0FBRyxFQUFFLENBQUMsQ0FBQztLQUNoRTtJQUFBLENBQUM7SUFFRixNQUFNLFdBQVcsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7UUFDMUMsT0FBTyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksS0FBSyxVQUFVLENBQUM7SUFDN0MsQ0FBQyxDQUFDLENBQUM7SUFDSCxJQUFJLENBQUMsV0FBVyxFQUFFO1FBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsNEJBQTRCLENBQUMsQ0FBQztLQUMzQztTQUFNO1FBQ0osT0FBTyxDQUFDLEdBQUcsQ0FBQyw0QkFBNEIsV0FBVyxDQUFDLFFBQVEsR0FBRyxHQUFHLEVBQUUsQ0FBQyxDQUFDO0tBQ3hFO0lBQUEsQ0FBQztBQUNKLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTkVNTGlicmFyeSwgTmV0d29ya1R5cGVzLCBBY2NvdW50SHR0cCwgU2ltcGxlV2FsbGV0IH0gZnJvbSBcIm5lbS1saWJyYXJ5XCI7XHJcblxyXG4vKlxyXG4vLyBTZXB0aW1vIEVqZW1wbG8gT0tcclxuLy8gUmV2aXNhciBiYWxhbmNlIGRlIFhFTVxyXG4vLyBSZXZpc2FyIGJsYW5jZXMgZGUgTU9TQUlDc1xyXG4qL1xyXG5cclxuLy8gRGlzcG9uaWJpbGl6YWNpb24gZGVsIG9iamV0byBmcyAoZmlsZSBzeXN0ZW0pIGVuIGxhIHZhcmlhYmxlIGZzXHJcbi8vIEx1ZWdvIGVzdGEgdmFyaWFibGUgbm9zIHBlcm1pdGlyYSBpbnRlcmFjdHVhciBjb24gZWwgc2lzdGVtYSBkZVxyXG4vLyBhcmNoaXZvcyBkZWwgc2lzdGVtYSBvcGVyYXRpdm9cclxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpO1xyXG5cclxuLy8gQ29uZmlndXJhY2lvbiBkZSBsYSByZWQgZGUgTkVNIHNvYnJlIGxhIHF1ZSBxdWVyZW1vcyB0cmFiYWphclxyXG5ORU1MaWJyYXJ5LmJvb3RzdHJhcChOZXR3b3JrVHlwZXMuVEVTVF9ORVQpO1xyXG5cclxuLy8gVmFyaWFibGUgZG9uZGUgc2UgYWxtYWNlbmEgbGEgcnV0YSBkb25kZSBzZSB2YSBhIGVzY3JpYmlyIGVsIGFyY2hpdm8gZGUgbGEgd2FsbGV0IGNyZWFkYS5cclxuY29uc3QgcnV0YVdhbGxldCA9ICdDOlxcXFxfQ3Vyc29cXFxcQ3J5cHRvUHJvamVjdHNcXFxcYmluJztcclxuLy8gVmFyaWFibGUgcXVlIHJlZ2lzdHJhIGVsIG5vbWJyZSBkZWwgYXJjaGl2byBkZSBsYSB3YWxsZXQgYSBndWFyZGFyXHJcbmNvbnN0IG5vbWJyZVdhbGxldEZpbGUgPSAnbWlXYWxsZXQud2x0JztcclxubGV0IGZ1bGxGaWxlV2FsbGV0UGF0aCA9IGAke3J1dGFXYWxsZXR9XFxcXCR7bm9tYnJlV2FsbGV0RmlsZX1gO1xyXG5cclxuLy8gTGV5ZW5kbyBlbCBhcmNoaXZvIGRlIGxhIHdhbGxldC4uLlxyXG5jb25zb2xlLmxvZygnQ2FyZ2FuZG8gZWwgY29udGVuaWRvIGRlbCBhcmNoaXZvIChlbiBjcnVkbykgZGUgbGEgd2FsbGV0IGVuIHVuYSB2YXJpYWJsZVxcbicpO1xyXG5jb25zdCB0bXBTdHJNaVdhbGxldCA9IGZzLnJlYWRGaWxlU3luYyhgJHtmdWxsRmlsZVdhbGxldFBhdGh9YCwgJ3V0ZjgnKTtcclxuY29uc3QgbWlXYWxsZXQgPSBTaW1wbGVXYWxsZXQucmVhZEZyb21XTFQodG1wU3RyTWlXYWxsZXQpO1xyXG5jb25zdCBteUFkZHJlc3MgPSBtaVdhbGxldC5hZGRyZXNzO1xyXG5jb25zb2xlLmxvZygnTGEgYWRkcmVzcyBvIGRpcmVjY2lvbiBkZSBsYSBjdWVudGEgY29udGVuaWRhIGVuIGxhIHdhbGxldCBlczpcXG4nKTtcclxuY29uc29sZS5sb2cobXlBZGRyZXNzLnByZXR0eSgpKTtcclxuXHJcblxyXG5jb25zdCBteUFjY291bnQgPSBuZXcgQWNjb3VudEh0dHAoKTtcclxubXlBY2NvdW50LmdldE1vc2FpY093bmVkQnlBZGRyZXNzKG15QWRkcmVzcykuc3Vic2NyaWJlKG1vc2FpY3MgPT4ge1xyXG4gIGNvbnN0IHhlbU1vc2FpYyA9IG1vc2FpY3MuZmluZCgobW9zYWljKSA9PiB7XHJcblx0XHRyZXR1cm4gbW9zYWljLm1vc2FpY0lkLm5hbWUgPT09ICd4ZW0nO1xyXG5cdH0pO1xyXG5cdGlmICgheGVtTW9zYWljKSB7XHJcbiAgICBjb25zb2xlLmxvZygnTGEgY2FudGlkYWQgWEVNIGVzOiAwJyk7XHJcbiAgfSBlbHNlIHtcclxuXHQgICBjb25zb2xlLmxvZyhgTGEgY2FudGlkYWQgWEVNIGVzOiAke3hlbU1vc2FpYy5xdWFudGl0eSAvIDFlNn1gKTtcclxuICB9O1xyXG5cclxuICBjb25zdCBkb2N0YU1vc2FpYyA9IG1vc2FpY3MuZmluZCgobW9zYWljKSA9PiB7XHJcbiAgICByZXR1cm4gbW9zYWljLm1vc2FpY0lkLm5hbWUgPT09ICdkb2N0YXRzdCc7XHJcbiAgfSk7XHJcbiAgaWYgKCFkb2N0YU1vc2FpYykge1xyXG4gICAgY29uc29sZS5sb2coJ0xhIGNhbnRpZGFkIGRvY3RhdHN0IGVzOiAwJyk7XHJcbiAgfSBlbHNlIHtcclxuICAgICBjb25zb2xlLmxvZyhgTGEgY2FudGlkYWQgZG9jdGF0c3QgZXM6ICR7ZG9jdGFNb3NhaWMucXVhbnRpdHkgLyAxZTZ9YCk7XHJcbiAgfTtcclxufSk7XHJcblxyXG4vLyBMYSBjYW50aWRhZCBYRU0gZXM6IDk2LjM1XHJcbi8vIExhIGNhbnRpZGFkIGRvY3RhdHN0IGVzOiAxMjM0NTY2Ljk5OTk5OFxyXG4iXX0=