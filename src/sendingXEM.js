"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const nem_library_1 = require("nem-library");
nem_library_1.NEMLibrary.bootstrap(nem_library_1.NetworkTypes.TEST_NET);
const NodoNEM = { protocol: 'https', domain: 'nistest.opening-line.jp', port: 7891 };
const privateKey = "c4c40504fded0288455b2dbb02ad47ffba0dbab31a882251391a454905857b9c";
const destinationAddress = 'TASEBRE3OYKZDC5XKAQLAIXXILLLHBQRNSFRMSJP';
const amountToSend = 1;
const transferMessage = 'Programando con NEM Blockchain en Santiago!!!';
const transferTransaction = nem_library_1.TransferTransaction.create(nem_library_1.TimeWindow.createWithDeadline(), new nem_library_1.Address(destinationAddress), new nem_library_1.XEM(amountToSend), nem_library_1.PlainMessage.create(transferMessage));
const transactionHttp = new nem_library_1.TransactionHttp([NodoNEM]);
const account = nem_library_1.Account.createWithPrivateKey(privateKey);
const signedTransaction = account.signTransaction(transferTransaction);
console.log(signedTransaction);
transactionHttp.announceTransaction(signedTransaction).subscribe(x => {
    console.log(x);
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2VuZGluZ1hFTS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNlbmRpbmdYRU0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw2Q0FBNEo7QUFRNUosd0JBQVUsQ0FBQyxTQUFTLENBQUMsMEJBQVksQ0FBQyxRQUFRLENBQUMsQ0FBQztBQUc1QyxNQUFNLE9BQU8sR0FBaUIsRUFBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLE1BQU0sRUFBRSx5QkFBeUIsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFDLENBQUM7QUFJakcsTUFBTSxVQUFVLEdBQVcsa0VBQWtFLENBQUM7QUFHOUYsTUFBTSxrQkFBa0IsR0FBRywwQ0FBMEMsQ0FBQztBQUN0RSxNQUFNLFlBQVksR0FBRyxDQUFDLENBQUM7QUFDdkIsTUFBTSxlQUFlLEdBQUcsK0NBQStDLENBQUM7QUFLeEUsTUFBTSxtQkFBbUIsR0FBRyxpQ0FBbUIsQ0FBQyxNQUFNLENBQ2xELHdCQUFVLENBQUMsa0JBQWtCLEVBQUUsRUFDL0IsSUFBSSxxQkFBTyxDQUFDLGtCQUFrQixDQUFDLEVBQy9CLElBQUksaUJBQUcsQ0FBQyxZQUFZLENBQUMsRUFDckIsMEJBQVksQ0FBQyxNQUFNLENBQUMsZUFBZSxDQUFDLENBQ3ZDLENBQUM7QUFHRixNQUFNLGVBQWUsR0FBRyxJQUFJLDZCQUFlLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDO0FBR3ZELE1BQU0sT0FBTyxHQUFHLHFCQUFPLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDLENBQUM7QUFHekQsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsZUFBZSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFdkUsT0FBTyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0FBRy9CLGVBQWUsQ0FBQyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtJQUNuRSxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO0FBQ2hCLENBQUMsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTkVNTGlicmFyeSwgTmV0d29ya1R5cGVzLCBUcmFuc2ZlclRyYW5zYWN0aW9uLCBUaW1lV2luZG93LCBBZGRyZXNzLCBYRU0sIFBsYWluTWVzc2FnZSwgU2VydmVyQ29uZmlnLCBUcmFuc2FjdGlvbkh0dHAsIEFjY291bnQgfSBmcm9tIFwibmVtLWxpYnJhcnlcIjtcclxuXHJcbi8qXHJcbi8vIFNleHRvIEVqZW1wbG8gT0tcclxuLy8gRW52aWFyIFhFTSAodHJhbnNhY2Npb25lcyBjb24gWEVNKVxyXG4qL1xyXG5cclxuLy8gQ29uZmlndXJhY2lvbiBkZSBsYSByZWQgZGUgTkVNIHNvYnJlIGxhIHF1ZSBxdWVyZW1vcyB0cmFiYWphclxyXG5ORU1MaWJyYXJ5LmJvb3RzdHJhcChOZXR3b3JrVHlwZXMuVEVTVF9ORVQpO1xyXG5cclxuLy8gRW4gZXN0ZSBjYXNvIHNlIGNvbmZpZ3VyYSB1biBOT0RPIE5FTSBwYXJhIHNhbGlyIGVzcGVjaWZpY2FtZW50ZSBwb3IgZXN0ZSBub2RvIHkgbm8gcG9yIGVsIHByaW1lcm8gcXVlIHNlIGVuY3VlbnRyZVxyXG5jb25zdCBOb2RvTkVNID0gPFNlcnZlckNvbmZpZz57cHJvdG9jb2w6ICdodHRwcycsIGRvbWFpbjogJ25pc3Rlc3Qub3BlbmluZy1saW5lLmpwJywgcG9ydDogNzg5MX07XHJcblxyXG4vLyBTZSBndWFyZGEgZW4gdW5hIHZhcmlhYmxlIHRlbXBvcmFsIGxhIGNsYXZlIHByaXZhZGEgZGUgcXVpZW4gZW52aWFcclxuLy8gTG8gaW50ZXJlc2FudGUgc2VyaWEgYWJyaXIgbGEgd2FsbGV0LCBzYWNhciBsYSBkYXRhIHkgY29uIGVzdGEgZGF0YSBmaXJtYXIgbGEgdHJhbnNhY2Npb24uXHJcbmNvbnN0IHByaXZhdGVLZXk6IHN0cmluZyA9IFwiYzRjNDA1MDRmZGVkMDI4ODQ1NWIyZGJiMDJhZDQ3ZmZiYTBkYmFiMzFhODgyMjUxMzkxYTQ1NDkwNTg1N2I5Y1wiO1xyXG5cclxuXHJcbmNvbnN0IGRlc3RpbmF0aW9uQWRkcmVzcyA9ICdUQVNFQlJFM09ZS1pEQzVYS0FRTEFJWFhJTExMSEJRUk5TRlJNU0pQJztcclxuY29uc3QgYW1vdW50VG9TZW5kID0gMTtcclxuY29uc3QgdHJhbnNmZXJNZXNzYWdlID0gJ1Byb2dyYW1hbmRvIGNvbiBORU0gQmxvY2tjaGFpbiBlbiBTYW50aWFnbyEhISc7XHJcblxyXG4vLyBzd2l0Y2ggdG8gbm9kZSBuaXN0ZXN0Lm9wZW5pbmctbGluZS5qcC4gSXQgdXNlcyBkaWZmZXJlbnQgY29uZmlndXJhdGlvbiBzbyBzaG91bGQgYWxsb3cgd3JvbmcgdGltZXN0YW1wLlxyXG4vLyBjaGFuZ2UgeW91ciBsb2NhbCB0aW1lIC0zMHNlY1xyXG4vLyBDcmVhIHVuYSB0cmFuc2FjY2lvbiBjb24gc3VzIGRhdG9zLlxyXG5jb25zdCB0cmFuc2ZlclRyYW5zYWN0aW9uID0gVHJhbnNmZXJUcmFuc2FjdGlvbi5jcmVhdGUoXHJcbiAgICBUaW1lV2luZG93LmNyZWF0ZVdpdGhEZWFkbGluZSgpLFxyXG4gICAgbmV3IEFkZHJlc3MoZGVzdGluYXRpb25BZGRyZXNzKSxcclxuICAgIG5ldyBYRU0oYW1vdW50VG9TZW5kKSxcclxuICAgIFBsYWluTWVzc2FnZS5jcmVhdGUodHJhbnNmZXJNZXNzYWdlKVxyXG4pO1xyXG5cclxuLy8gQ3JlYSB1bmEgY29uZXhpb24gSFRUUCBwYXJhIGVudmlhciBsYSB0cnggbHVlZ29cclxuY29uc3QgdHJhbnNhY3Rpb25IdHRwID0gbmV3IFRyYW5zYWN0aW9uSHR0cChbTm9kb05FTV0pO1xyXG5cclxuLy8gQ3JlYSB1bmEgY3VlbnRhIGNvbiBsYSBjbGF2ZSBwcml2YWRhLlxyXG5jb25zdCBhY2NvdW50ID0gQWNjb3VudC5jcmVhdGVXaXRoUHJpdmF0ZUtleShwcml2YXRlS2V5KTtcclxuXHJcbi8vIFNlIGZpcm1hIGxhIHRyYW5zYWNjaW9uIGFudGVzIGRlIHN1IGVudmlvLlxyXG5jb25zdCBzaWduZWRUcmFuc2FjdGlvbiA9IGFjY291bnQuc2lnblRyYW5zYWN0aW9uKHRyYW5zZmVyVHJhbnNhY3Rpb24pO1xyXG5cclxuY29uc29sZS5sb2coc2lnbmVkVHJhbnNhY3Rpb24pO1xyXG5cclxuLy8gQ3VhbmRvIHNlIGFudW5jaWEgbGEgdHJhbnNhY2Npb24gZXMgY3VhbmRvIHJlYWxtZW50ZSBzZSBsYSBlbnZpYSBhIGxhIGJsb2NrY2hhaW4uXHJcbnRyYW5zYWN0aW9uSHR0cC5hbm5vdW5jZVRyYW5zYWN0aW9uKHNpZ25lZFRyYW5zYWN0aW9uKS5zdWJzY3JpYmUoeCA9PiB7XHJcbiAgY29uc29sZS5sb2coeClcclxufSk7XHJcbiJdfQ==